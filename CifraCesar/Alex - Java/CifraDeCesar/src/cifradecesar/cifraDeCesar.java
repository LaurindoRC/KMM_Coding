/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cifradecesar;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author alex
 */
public class cifraDeCesar extends javax.swing.JFrame {

   /**
    * Creates new form cifraDeCesar
    */
   public cifraDeCesar() {
      initComponents();
      this.setLocationRelativeTo(null);
//      this.setExtendedState(MAXIMIZED_BOTH);
      this.setTitle("Alex - Cifra de Cesar");
      configAll();
   }

   public void configAll() {
      configTela();
      configListeners();
   }

   public void configTela() {
      jTextAreaResultado.setEnabled(false);
      jTextAreaResultado.setLineWrap(true);

      jTextAreaEntrada.setLineWrap(true);

      jRadioButtonCriptografar.setSelected(true);
   }

   private void configListeners() {
      jTextAreaEntrada.getDocument().addDocumentListener(new DocumentListener() {
         @Override
         public void insertUpdate(DocumentEvent e) {
            avaliaEntrada();
         }

         @Override
         public void removeUpdate(DocumentEvent e) {
            avaliaEntrada();
         }

         @Override
         public void changedUpdate(DocumentEvent e) {
         }
      });

      ActionListener radioButtonListener = new ActionListener() {
         @Override
         public void actionPerformed(ActionEvent e) {
            avaliaEntrada();
         }
      };

      jRadioButtonCriptografar.addActionListener(radioButtonListener);

      jRadioButtonDescriptografar.addActionListener(radioButtonListener);

      jButtonInverter.addActionListener(new ActionListener() {
         @Override
         public void actionPerformed(ActionEvent e) {
            inverteTextos();
            if (jRadioButtonCriptografar.isSelected()) {
               jRadioButtonDescriptografar.setSelected(true);
            } else {
               jRadioButtonCriptografar.setSelected(true);
            }
         }
      });

      jButtonCopiar.addActionListener(new ActionListener() {
         @Override
         public void actionPerformed(ActionEvent e) {
            StringSelection stringSelection = new StringSelection(jTextAreaResultado.getText());
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
         }
      });
   }

   private void inverteTextos() {
      String aux;
      aux = jTextAreaEntrada.getText();
      jTextAreaEntrada.setText(jTextAreaResultado.getText());
      jTextAreaResultado.setText(aux);
   }

   private void avaliaEntrada() {
      int key;
      if (jRadioButtonCriptografar.isSelected()) {
         key = 3;
      } else {
         key = -3;
      }
      jTextAreaResultado.setText(executeCifraDeCesar(jTextAreaEntrada.getText(), key));
   }

   private String executeCifraDeCesar(String entrada, int key) {
      StringBuilder saida = new StringBuilder();
      int intCaracter;
      for (int i = 0; i < entrada.length(); i++) {
         intCaracter = (int) entrada.charAt(i);
         //pega apenas os caracteres a-zA-Z, qualquer outro diferente mantem o mesmo
         //é possivel melhorar a lógica para usar em números e caracteres especiais
         if ((intCaracter >= 65 && intCaracter <= 90) || (intCaracter >= 97 && intCaracter <= 122)) {
            intCaracter += key;
         }

         //quando estiver criptografando e o caracter for "X, Y, Z, x, y, z" é subtraido 26 fazendo com que voltem a ser "A, B, C, a, b, c"
         //quando estiver descriptografando e o caracter for "A, B, C, a, b, c" é somado 26 fazendo com que voltem a ser "X, Y, Z, x, y, z"
         //dessa forma "dou a volta" no alfabeto sem utilizar o mod
         if (key > 0) { //se maior que 0 esta criptografando
            if (intCaracter == 123 || intCaracter == 124 || intCaracter == 125 || intCaracter == 91 || intCaracter == 92 || intCaracter == 93) {
               intCaracter -= 26;
            }
         } else if (intCaracter == 94 || intCaracter == 95 || intCaracter == 96 || intCaracter == 62 || intCaracter == 63 || intCaracter == 64) {
            intCaracter += 26;
         }
         saida.append((char) intCaracter);
      }
      return saida.toString();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      buttonGroupEscolha = new javax.swing.ButtonGroup();
      jPanelResultado = new javax.swing.JPanel();
      jScrollPaneResultado = new javax.swing.JScrollPane();
      jTextAreaResultado = new javax.swing.JTextArea();
      jPanelEntrada = new javax.swing.JPanel();
      jScrollPaneEntrada = new javax.swing.JScrollPane();
      jTextAreaEntrada = new javax.swing.JTextArea();
      jPanelOperacoes = new javax.swing.JPanel();
      jRadioButtonCriptografar = new javax.swing.JRadioButton();
      jRadioButtonDescriptografar = new javax.swing.JRadioButton();
      jButtonCopiar = new javax.swing.JButton();
      jButtonInverter = new javax.swing.JButton();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

      jPanelResultado.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultado"));

      jTextAreaResultado.setColumns(20);
      jTextAreaResultado.setRows(5);
      jScrollPaneResultado.setViewportView(jTextAreaResultado);

      javax.swing.GroupLayout jPanelResultadoLayout = new javax.swing.GroupLayout(jPanelResultado);
      jPanelResultado.setLayout(jPanelResultadoLayout);
      jPanelResultadoLayout.setHorizontalGroup(
         jPanelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanelResultadoLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPaneResultado)
            .addContainerGap())
      );
      jPanelResultadoLayout.setVerticalGroup(
         jPanelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanelResultadoLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPaneResultado, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
            .addContainerGap())
      );

      jPanelEntrada.setBorder(javax.swing.BorderFactory.createTitledBorder("Entrada"));

      jTextAreaEntrada.setColumns(20);
      jTextAreaEntrada.setRows(5);
      jScrollPaneEntrada.setViewportView(jTextAreaEntrada);

      javax.swing.GroupLayout jPanelEntradaLayout = new javax.swing.GroupLayout(jPanelEntrada);
      jPanelEntrada.setLayout(jPanelEntradaLayout);
      jPanelEntradaLayout.setHorizontalGroup(
         jPanelEntradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanelEntradaLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPaneEntrada)
            .addContainerGap())
      );
      jPanelEntradaLayout.setVerticalGroup(
         jPanelEntradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanelEntradaLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPaneEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      buttonGroupEscolha.add(jRadioButtonCriptografar);
      jRadioButtonCriptografar.setText("Criptografar");

      buttonGroupEscolha.add(jRadioButtonDescriptografar);
      jRadioButtonDescriptografar.setText("Descriptografar");

      jButtonCopiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/copiar.png"))); // NOI18N
      jButtonCopiar.setText("Copiar");

      jButtonInverter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/inverter.png"))); // NOI18N
      jButtonInverter.setText("Inverter");

      javax.swing.GroupLayout jPanelOperacoesLayout = new javax.swing.GroupLayout(jPanelOperacoes);
      jPanelOperacoes.setLayout(jPanelOperacoesLayout);
      jPanelOperacoesLayout.setHorizontalGroup(
         jPanelOperacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanelOperacoesLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jRadioButtonCriptografar)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jRadioButtonDescriptografar)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jButtonInverter)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jButtonCopiar)
            .addContainerGap(224, Short.MAX_VALUE))
      );
      jPanelOperacoesLayout.setVerticalGroup(
         jPanelOperacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanelOperacoesLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanelOperacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jButtonCopiar)
               .addComponent(jRadioButtonCriptografar)
               .addComponent(jRadioButtonDescriptografar)
               .addComponent(jButtonInverter))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jPanelResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(jPanelEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(jPanelOperacoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanelResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanelOperacoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanelEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
      /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(cifraDeCesar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(cifraDeCesar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(cifraDeCesar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(cifraDeCesar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            new cifraDeCesar().setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.ButtonGroup buttonGroupEscolha;
   private javax.swing.JButton jButtonCopiar;
   private javax.swing.JButton jButtonInverter;
   private javax.swing.JPanel jPanelEntrada;
   private javax.swing.JPanel jPanelOperacoes;
   private javax.swing.JPanel jPanelResultado;
   private javax.swing.JRadioButton jRadioButtonCriptografar;
   private javax.swing.JRadioButton jRadioButtonDescriptografar;
   private javax.swing.JScrollPane jScrollPaneEntrada;
   private javax.swing.JScrollPane jScrollPaneResultado;
   private javax.swing.JTextArea jTextAreaEntrada;
   private javax.swing.JTextArea jTextAreaResultado;
   // End of variables declaration//GEN-END:variables
}
